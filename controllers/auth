const user = require('../models/user');
const wallet = require('../models/wallet');
const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken');

exports.register = async (req, res) => {
    try {
        const { name, email, password } = req.body;

        let user = await user.findOne({email});
        if (user) return res.status(400).json({message: "User already exist"});

        const hashPassword = await bcrypt.hash(password, 10);

        user = await user.create({name, email, password:hashPassword});

        await wallet.create({user:user._id});

        const token = jwt.sign({id: user._id },process.env.JWT_SECRET, { expiresIn: '1d'});
        res.status(201).json({token});
    } catch (err) {
        res.status(501).json({msg: "server error", error: err.message});
    }
};

exports.login = async (req, res) => {
    try {
        const {email, password} = req.body

        const user = await user.findOne({email});
        if(!user) return res.status(404).json({msg: "Username Invalid"});

        const isMatch = await bcrypt.compare(password, user.password);
        if (!isMatch) return res.status(400).json({msg: "Invalid Crediatial"});

        const token = jwt.sign({id: user._id}, process.env.JWT_SECRET, { expiresIn :'1d' });
        res.json({ token });
    } catch (err) {
        res.status(500).json({msg: "Server Error", error: err.message });
    }
};